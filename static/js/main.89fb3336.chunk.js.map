{"version":3,"sources":["types/type.js","Reducers/NoteReducer.js","Reducers/ui.Reducer.js","store/Store.js","Reducers/authReducer.js","firebase/firebaseConfig.js","actions/ui.js","helpers/LoadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","hooks/UseForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/Journal/NothingSelected.js","components/Journal/JournalEntry.js","components/Journal/JournalEntries.js","components/Journal/SideBar.js","components/Journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterSceen.js","routes/AuthRoute.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRoutes.js","JournalApp.js","index.js"],"names":["types","initiaState","notes","active","initialState","loading","msgError","reducer","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","GoogleAuthProvider","setError","error","finishLoading","LoadNotes","a","collection","orderBy","get","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudRest","secure_url","addNewNote","activeNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteFireStore","doc","update","Swal","fire","title","refreshNote","deleteNote","starLoginEmailAndPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","console","log","logOut","useForm","useState","values","setValues","reset","newResetValue","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","actualDate","moment","format","className","onChange","e","files","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","style","display","onClick","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","src","alt","delete","startdeletingNote","NothingSelected","locale","JournalEntry","date","noteDate","backgroundImage","backgroundSize","JournalEntries","key","SideBar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","onSubmit","preventDefault","trim","disabled","signInWithPopup","to","RegisterSceen","password2","isFormValid","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","message","startRegisterWithEmailAndPasswordName","class","AuthRoute","path","component","PrivateRoute","isAutenticated","Component","rest","props","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRoutes","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.89fb3336.chunk.js","sourcesContent":["export const types={\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n    //errores\r\n\r\n    uiSetError:'[UI] Set Error',\r\n    uiRemoveError:'[UI] Remove Error',\r\n    //desabilitar el boton\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Note] New Note',\r\n    notesActive:'[Note]  set active note',\r\n    notesLoad:'[Note] load note',\r\n    notesUpdated:'[Note] Update note',\r\n    notesFileURL:'[Note] Update image url ',\r\n    notesDelete:'[Note] Delete note ',\r\n    notesLogoutCleaning:'[Note] logout Cleaning '\r\n\r\n}","import { types } from \"../types/type\";\r\n\r\nconst initiaState={\r\n    notes:[],\r\n    active:null\r\n}\r\n\r\nexport const NoteReducer=(state=initiaState,action)=>{\r\n    switch (action.type) {\r\n       case types.notesActive:\r\n           return{\r\n               ...state,\r\n               active:action.payload\r\n           };\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload,...state.notes ]\r\n            }\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: action.payload\r\n            }\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map( note=>(\r\n                    note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                ))\r\n            }\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes: state.notes.filter( note=> note.id !== action.payload )\r\n            };\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                notes:[],\r\n                active:null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/type\";\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    msgError:null\r\n};\r\n\r\nexport const uiReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload,\r\n            };\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError:null\r\n            };\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore,combineReducers , applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../Reducers/authReducer';\r\nimport { NoteReducer } from '../Reducers/NoteReducer';\r\nimport { uiReducer } from '../Reducers/ui.Reducer';\r\n\r\nconst reducer = combineReducers({\r\n    auth: authReducer,\r\n    ui:uiReducer,\r\n    notes:NoteReducer\r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    composeEnhancers( applyMiddleware(thunk) )\r\n    );","import { types } from \"../types/type\";\r\n\r\nexport const authReducer =(state={},action)=>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid:action.payload.uid,\r\n                name:action.payload.displayName\r\n            };\r\n        case types.logout:\r\n            return{}\r\n        default:\r\n            return state\r\n    }\r\n}","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey:process.env.REACT_APP_APIKEY ,\r\n    authDomain:process.env.REACT_APP_AUTHDOMAIN ,\r\n    projectId:process.env.REACT_APP_PROJECTID ,\r\n    storageBucket:process.env.REACT_APP_STORAGEBUCKET ,\r\n    messagingSenderId:process.env.REACT_APP_MESSAGINGSENDERID ,\r\n    appId:process.env.REACT_APP_APPID \r\n  };\r\n\r\n// const firebaseConfigTesting = {\r\n//     apiKey: \"AIzaSyCXAZaZ5983sZf9lOVS-ePXDNVZZGNWGBU\",\r\n//     authDomain: \"journal-app-testing-72d1b.firebaseapp.com\",\r\n//     projectId: \"journal-app-testing-72d1b\",\r\n//     storageBucket: \"journal-app-testing-72d1b.appspot.com\",\r\n//     messagingSenderId: \"291700895874\",\r\n//     appId: \"1:291700895874:web:242fe5d2af8f20b6ea049b\"\r\n//   };\r\n\r\n// if( process.env.NODE_ENV==='test'){\r\n//   //Testing\r\n//   firebase.initializeApp(firebaseConfigTesting);\r\n// }else{\r\n//   //dev/production\r\n//   firebase.initializeApp(firebaseConfig);\r\n// }\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nexport { db , googleAuthProvider ,firebase}\r\n\r\n\r\n","import { types } from \"../types/type\";\r\n\r\nexport const setError = (error)=>({\r\n    type: types.uiSetError,\r\n    payload: error\r\n});\r\n\r\nexport const removeError = ()=>({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading =()=>({\r\n    type: types.uiStartLoading\r\n});\r\nexport const finishLoading =()=>({\r\n    type: types.uiFinishLoading\r\n});","import { db } from \"../firebase/firebaseConfig\";\r\n\r\nexport const LoadNotes= async(uid)=>{\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).orderBy('date','desc').get();\r\n    const notes=[];\r\n   \r\n    notesSnap.forEach( snapHijo=>{\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n     \r\n    return notes;\r\n};\r\n","export const fileUpload= async (file)=>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dsq6grdaj/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method:'POST',\r\n            body:formData\r\n        });\r\n    \r\n        if(resp.ok){\r\n            const cloudRest = await resp.json();\r\n            return cloudRest.secure_url\r\n        }else{\r\n            return null\r\n        } \r\n    } catch (error) {\r\n       throw error\r\n    }\r\n    \r\n\r\n}","import { db } from \"../firebase/firebaseConfig\";\r\nimport {types} from '../types/type';\r\nimport {LoadNotes} from '../helpers/LoadNotes'\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote=()=>{\r\n    return async (dispatch,getState)=>{\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote={\r\n            title:'',\r\n            body:'',\r\n            date: new Date().getTime()\r\n        };\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        dispatch( activeNote(doc.id,newNote) );\r\n        dispatch( addNewNote(doc.id,newNote) );\r\n        \r\n    };\r\n};\r\n\r\nexport const addNewNote=(id,note)=>({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id,...note\r\n    }\r\n})\r\nexport const activeNote=( id,note )=>({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes=(uid)=>{\r\n    return async (dispatch)=>{\r\n        const notes = await LoadNotes(uid);\r\n        dispatch( setNotes(notes) );\r\n    };\r\n};\r\n\r\nexport const setNotes=(notes)=>({\r\n    type: types.notesLoad,\r\n    payload:notes\r\n});\r\n\r\nexport const startSaveNote =(note)=>{\r\n    return async (dispatch , getState)=>{\r\n        const {uid} = getState().auth;\r\n\r\n        if(!note.url){\r\n            delete note.url\r\n        }\r\n        \r\n        const noteFireStore = {...note};\r\n        delete noteFireStore.id;\r\n        \r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteFireStore);\r\n        Swal.fire('Guardado',note.title,'success')\r\n        dispatch( refreshNote(note.id,note) );\r\n    }\r\n};\r\n\r\nexport const refreshNote =(id,note)=>({\r\n    type: types.notesUpdated,\r\n    payload:{\r\n        id,note\r\n    }\r\n});\r\n\r\nexport const startUploading = (file)=> {\r\n    return async(dispatch , getState)=>{\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title:'Subiendo Imagen',\r\n            text: 'Espera Pof Favor...',\r\n            allowOutsideClick:false,\r\n            willOpen: ()=>{\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n        \r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl\r\n        dispatch( startSaveNote(activeNote) );\r\n        Swal.close();\r\n        \r\n    }\r\n};\r\n\r\n\r\nexport const startdeletingNote=(id)=>{\r\n    return async (dispatch,getState)=>{\r\n\r\n        const {uid}= getState(id).auth;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id) )\r\n        \r\n    }\r\n};\r\n\r\nexport const deleteNote=(id)=>({\r\n    type:types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const notelogOut=()=>({\r\n    type: types.notesLogoutCleaning,\r\n});","import Swal from 'sweetalert2'\r\nimport {types} from '../types/type'\r\nimport {firebase,googleAuthProvider}  from '../firebase/firebaseConfig'\r\nimport { startLoading ,finishLoading } from './ui';\r\nimport { notelogOut } from './notes';\r\n\r\nexport const starLoginEmailAndPassword=(email,password)=>{\r\n    return (dispatch)=>{\r\n        \r\n        dispatch( startLoading() );\r\n\r\n        return firebase.auth().signInWithEmailAndPassword(email,password)\r\n            .then( ({user})=>{\r\n\r\n                dispatch( login(user.uid,user.displayName) );\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( error=> {\r\n                console.log(error)\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error','Usuario o contraseña incorrectos , Intenta De Nuevo','error')\r\n                \r\n            })\r\n    }\r\n};\r\n\r\nexport const startRegisterWithEmailAndPasswordName=(email,password,name)=>{\r\n    return (dispatch)=>{\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email ,password )\r\n                .then( async ({user})=> {\r\n\r\n                    await user.updateProfile({displayName:name});\r\n                    dispatch( login(user.uid , user.displayName ) );\r\n                    console.log( user);\r\n                    \r\n                })\r\n                .catch( e=> {\r\n                    Swal.fire('Error', e.message ,'error');\r\n                });\r\n    }\r\n};\r\n\r\nexport const loginWithGoogle=()=>{\r\n    return (dispatch)=>{\r\n         firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({user})=> {\r\n                dispatch( login(user.uid,user.displayName) )\r\n            })        \r\n    }\r\n};\r\n\r\nexport const startLogOut= ()=>{\r\n    return  async(dispatch)=>{\r\n        await firebase.auth().signOut()\r\n        dispatch( logOut() );\r\n        dispatch( notelogOut() );\r\n    }\r\n};\r\n\r\nexport const login=(uid,displayName)=>({\r\n    type: types.login,\r\n    payload:{\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const logOut=()=>({\r\n    type: types.logout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newResetValue = initialState) => {\r\n        setValues( newResetValue );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nconst NotesAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n    const saveNote=()=>{\r\n        dispatch( startSaveNote(active) );\r\n    };\r\n\r\n    const handlePictureUpload=()=>{\r\n        document.querySelector('#inputFile').click()\r\n    } \r\n    \r\n    const handleFileChange=(e)=>{\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch( startUploading(file) );\r\n        }\r\n    };\r\n\r\n    const actualDate = moment().format('LL')\r\n   \r\n    return (\r\n        <div className='notes__appbar' >\r\n            <span>{actualDate}</span>\r\n            <input\r\n                id='inputFile'\r\n                type='file'\r\n                name='file'\r\n                onChange={handleFileChange}\r\n                style={{display:'none'}}\r\n            />\r\n            <div>\r\n                <button\r\n                    className='btn'\r\n                    onClick={handlePictureUpload}\r\n                >Imagen</button>\r\n                <button\r\n                    className='btn'\r\n                    onClick={saveNote}\r\n                >Guardar</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesAppBar\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startdeletingNote } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/UseForm';\r\nimport NotesAppBar from './NotesAppBar'\r\n\r\nconst NoteScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { active:note} = useSelector(state => state.notes);\r\n    //manejar el formulario\r\n    const [values,handleInputChange,reset] = useForm(note);\r\n    const {title,body,id}= values;\r\n\r\n    const activeId = useRef(note.id);\r\n    \r\n    useEffect(()=>{\r\n        if( note.id !== activeId.current ){\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n    },[note,reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote(values.id , {...values} ) )\r\n    }, [values, dispatch]);\r\n\r\n    const handDeleteNote =()=>{\r\n        \r\n        dispatch( startdeletingNote(id) )\r\n    }\r\n\r\n    return (\r\n        <div className='notes__main-content' >\r\n            <NotesAppBar/>\r\n            <div className='notes__content' >\r\n                <input\r\n                    type='text'\r\n                    placeholder='Tu titulo'\r\n                    className='notes__title-input'\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    \r\n                />\r\n                <textarea\r\n                    placeholder='Escribe algo Aqui'\r\n                    className='notes__textarea'\r\n                    value={body}\r\n                    name='body'\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n               { note.url &&\r\n                \r\n                    <div  className='notes__image' >\r\n                        <img\r\n                            src={note.url}\r\n                            alt={note.title}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                onClick={handDeleteNote}\r\n                className='btn btn-danger'\r\n            >Borrar Nota</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteScreen\r\n","import React from 'react'\r\n\r\nconst NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content' >\r\n            <p>\r\n                Seleccione algo <br/>\r\n                <span>o Cree alguna entrada</span>\r\n                <br/>\r\n                <i className='far fa-star fa-4x mt-5' ></i>\r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NothingSelected\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\nmoment.locale('es');\r\n\r\nconst JournalEntry = ({id,title,body,url,date}) => {\r\n    const dispatch = useDispatch()\r\n    const noteDate = moment(date);\r\n\r\n\r\n    const handleEntryClick=()=>{\r\n        dispatch( activeNote(id,{title,body,url,date}) );\r\n    }\r\n    return (\r\n        <div \r\n            className='journal__entry pointer'\r\n            onClick={handleEntryClick} \r\n        >\r\n            {\r\n                url&&\r\n                <div\r\n                    className='journal__entry-picture '\r\n                    style={{\r\n                        backgroundImage:`url(${url})`,\r\n                        backgroundSize: 'cover'\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className='journal__entry-body '>\r\n                <p className='journal__entry-title' >{title}</p>\r\n                <p className='journal__entry-content' >{body}</p> \r\n            </div>\r\n\r\n            <div className='journal__entry-date-box'>\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntry\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport JournalEntry from './JournalEntry'\r\n\r\nconst JournalEntries = () => {\r\n    const {notes} = useSelector(state => state.notes)\r\n    return (\r\n        <div className='journal__entries animate__animated animate__fadeIn animate__faster ' >\r\n            {\r\n             notes.map( note=>(\r\n                 <JournalEntry\r\n                    key={ note.id }\r\n                    {...note}\r\n                 />\r\n             ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntries\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogOut } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport JournalEntries from './JournalEntries';\r\n\r\nconst SideBar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n    const handleLogOut =()=>{\r\n        dispatch( startLogOut() );\r\n    };\r\n\r\n    const handleEntry =()=>{\r\n        dispatch( startNewNote() );\r\n    };\r\n    return (\r\n        <aside className='journal__sidebar' >\r\n            <div className='journal__sidebar-navbar'>\r\n                <h3 className='mt-5' >\r\n                    <i className='fas fa-moon'></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button\r\n                    className='btn'\r\n                    onClick={ handleLogOut }\r\n                >Logout</button>\r\n            </div>\r\n            <div \r\n                className='journal__new-entry'\r\n                onClick={ handleEntry} \r\n            >\r\n                <i className='fas fa-calendar-plus fa-5x' ></i>\r\n                <p className='mt-5'>Nueva Entrada</p>\r\n            </div>\r\n            \r\n            <JournalEntries/>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default SideBar;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport NoteScreen from '../notes/NoteScreen'\r\nimport NothingSelected from '../Journal/NothingSelected'\r\nimport SideBar from './SideBar'\r\n// import NothingSelected from './NothingSelected'\r\n\r\n\r\nexport const JournalScreen = () => {\r\n    const { active } = useSelector(state => state.notes);\r\n    return (\r\n        <div className='journal__main-content' >\r\n           <SideBar/>\r\n           <main>\r\n\r\n               {\r\n                   (active)\r\n                        ? <NoteScreen/>\r\n                        : <NothingSelected />\r\n                   \r\n               }\r\n               \r\n           </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport { loginWithGoogle, starLoginEmailAndPassword } from '../../actions/auth';\r\nimport { setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/UseForm';\r\n\r\n\r\n\r\nconst LoginScreen = () => {\r\n    \r\n    const [values, handleInputChange,]=useForm({\r\n        email:'luis@correo.com',\r\n        password:'luchito'\r\n    });\r\n\r\n    const { email,password}=values;\r\n    const dispatch = useDispatch(); \r\n    const {msgError , loading} = useSelector(state => state.ui);\r\n\r\n    //submit del login\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        //validar\r\n        if( email.trim()===''|| password.trim()==='' ){\r\n            dispatch( setError('Ambos campos son obligatorios') );\r\n            return; \r\n        }\r\n        ///paso la validacion \r\n        dispatch( starLoginEmailAndPassword(email,password) );\r\n    }\r\n\r\n    const handleLoginClick =()=>{\r\n        dispatch( loginWithGoogle() )\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className='auth__title' >Login</h3>\r\n            {\r\n            msgError &&\r\n            <div className='auth__alert-error' >{msgError}</div>\r\n            }\r\n            <form\r\n               onSubmit={handleSubmit}\r\n               className=\"animate__animated animate__fadeIn animate__faster\" \r\n            >\r\n                <input\r\n                    type='text'\r\n                    name='email'\r\n                    placeholder='correo@correo.com'\r\n                    className='auth__input'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder='******'\r\n                    className='auth__input'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block'\r\n                    disabled={ loading }\r\n                >Ingresar</button>\r\n                <hr/>\r\n                <div className='auth__social-networks' >\r\n                    <p>Login con Redes Sociales</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleLoginClick}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    to='/auth/register'\r\n                    className='link'\r\n                >Crear Nueva Cuenta</Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport validator from 'validator'\r\nimport {Link} from 'react-router-dom';\r\nimport { useForm } from '../../hooks/UseForm';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailAndPasswordName } from '../../actions/auth';\r\n\r\nconst RegisterSceen = () => {\r\n    \r\n    const  [values , handleInputChange ] = useForm({\r\n        name:'Luis',\r\n        password:'luchito',\r\n        password2:'luchito',\r\n        email:'luis@correo.com',\r\n        \r\n    });\r\n\r\n    const {name,password,password2,email}= values;\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        //validacion\r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmailAndPasswordName(email,password,name) );\r\n        }\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    const isFormValid=()=>{\r\n        if(name.trim().length === 0){\r\n            dispatch( setError('El nombre es requerido') );\r\n            return false;\r\n        }else if( !validator.isEmail( email ) ){\r\n            dispatch( setError('No es un email valido') );\r\n            return false;\r\n        }else if( password !== password2 || password.length < 5 ){\r\n            dispatch( setError('Ambos passwordS debe ser iguales y no deben de tener menos de 5 caracteres') );\r\n            return false;\r\n        };\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <h3 className='auth__title' >Registrar</h3>\r\n\r\n        {\r\n            msgError &&\r\n            <div className='auth__alert-error' >{msgError}</div>\r\n        }\r\n\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            class=\"animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n            <input\r\n                type='text'\r\n                name='name'\r\n                placeholder='Tu Nombre'\r\n                className='auth__input'\r\n                value={name}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input\r\n                type='text'\r\n                name='email'\r\n                placeholder='correo@correo.com'\r\n                className='auth__input'\r\n                value={email}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input\r\n                type='password'\r\n                name='password'\r\n                placeholder='******'\r\n                className='auth__input'\r\n                value={password}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input\r\n                type='password'\r\n                name='password2'\r\n                placeholder='Repetir Contraseña'\r\n                className='auth__input'\r\n                value={password2}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button\r\n                type='submit'\r\n                className='btn btn-primary btn-block mb-5'\r\n            >Registrar</button>\r\n            <hr/>\r\n            \r\n            <Link\r\n                to='/auth/login'\r\n                className='link'\r\n            >Ya estas registardo?</Link>\r\n        </form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default RegisterSceen\r\n","import React from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\nimport LoginScreen from '../components/auth/LoginScreen'\r\nimport RegisterSceen from '../components/auth/RegisterSceen'\r\n\r\nconst AuthRoute = () => {\r\n    return (\r\n        <div className='auth__main' >\r\n            <div className='auth__box-container' >\r\n            <Switch>\r\n                <Route path='/auth/login' component={LoginScreen} />\r\n                <Route path='/auth/register' component={RegisterSceen} />\r\n                <Redirect to='/auth/login' />\r\n            </Switch>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRoute\r\n","import { Route , Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nexport const PrivateRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} \r\n            component={ (props)=>(\r\n                (isAutenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/auth/login' />\r\n        )}\r\n        />\r\n    )\r\n};\r\n\r\nPrivateRoute.prototype={\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\n","import { Route , Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nexport const PublicRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} \r\n            component={ (props)=>(\r\n                (isAutenticated)\r\n                    ? <Redirect to='/' />\r\n                    : <Component {...props} />\r\n        )}\r\n        />\r\n    )\r\n};\r\n\r\nPublicRoute.prototype={\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport {firebase} from '../firebase/firebaseConfig'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Redirect\r\n  } from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\nimport { JournalScreen } from '../components/Journal/JournalScreen';\r\nimport AuthRoute from './AuthRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nconst AppRoutes = () => {\r\n    //DISPARA EL SPINNER\r\n    const [checking, setChecking] = useState(true);\r\n    //VERIFICA QUE ES AUTENTICADO O NO\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user)=>{\r\n            if( user?.uid){\r\n                dispatch( login(user.uid,user.displayName) );\r\n                setIsLoggedIn(true);\r\n                //carga todas la notas que tenga en la BD\r\n                dispatch( startLoadingNotes(user.uid) );\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n       \r\n    }, [dispatch,setChecking,setIsLoggedIn]);\r\n\r\n\r\n    if(checking){\r\n        return <h1> Cargando... </h1>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n            <Switch>\r\n                <PublicRoute isAutenticated={ isLoggedIn } path='/auth' component={AuthRoute}/>\r\n                <PrivateRoute isAutenticated={ isLoggedIn } exact path='/' component={JournalScreen} />\r\n                <Redirect to='/auth/login' />\r\n\r\n            </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRoutes\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/Store'\r\nimport AppRoutes from './routes/AppRoutes'\r\n\r\nconst JournalApp = () => {\r\n    return (\r\n        <Provider store={store} >\r\n            <AppRoutes/>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default JournalApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\nimport './styles/style.scss'\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}